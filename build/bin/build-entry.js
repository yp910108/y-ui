const path = require('path')
const fs = require('fs')
const endOfLine = require('os').EOL
const render = require('json-templater/string')
const uppercamelcase = require('uppercamelcase')
const Components = require('../../components.json')

const OUTPUT_PATH = path.join(__dirname, '../../src/index.js')
const IMPORT_TEMPLATE = "import {{name}} from '../packages/{{package}}'"
const INSTALL_COMPONENT_TEMPLATE = '  {{name}}'
const MAIN_TEMPLATE = `/* Automatically generated by './build/bin/build-entry.js' */

import locale from './locale'
{{include}}

const components = [
{{install}}
]

const install = function (Vue, opts = {}) {
  locale.use(opts.locale)
  locale.i18n(opts.i18n)

  components.forEach((component) => {
    Vue.component(component.name, component)
  })

  Vue.prototype.$YUI = {
    size: opts.size || '',
    zIndex: opts.zIndex || 2000
  }
}

if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue)
}

export default {
  version: '{{version}}',
  locale: locale.use,
  i18n: locale.i18n,
  install,
{{list}}
}
`

const ComponentNames = Object.keys(Components)

const includeComponentTemplate = []
const installTemplate = []
const listTemplate = []

for (const name of ComponentNames) {
  const componentName = uppercamelcase(name)

  includeComponentTemplate.push(
    render(IMPORT_TEMPLATE, {
      name: componentName,
      package: name
    })
  )

  installTemplate.push(
    render(INSTALL_COMPONENT_TEMPLATE, {
      name: componentName
    })
  )

  listTemplate.push(`  ${componentName}`)
}

var template = render(MAIN_TEMPLATE, {
  include: includeComponentTemplate.join(endOfLine),
  install: installTemplate.join(`,${endOfLine}`),
  version: process.env.VERSION || require('../../package.json').version,
  list: listTemplate.join(`,${endOfLine}`)
})

fs.writeFileSync(OUTPUT_PATH, template)
console.log(`[build entry] DONE: ${OUTPUT_PATH}`)
